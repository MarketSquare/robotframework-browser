# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install nodejs dependencies
      run: |
        yarn --frozen-lockfile
        npm install --global playwright
        yarn install
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
    - name: Check types with mypy
      run: |
        mypy .
    - name: Check with flake8
      run: |
        flake8
    - name: Build Protos and check with tsc
      run: |
        make build
    - name: Run pytests
      run: |
       make utest 
    - name: Run Robot Framework tests
      run: |
        make atest
    - name: Create Distributable Package
      run: |
        make package
    - uses: actions/upload-artifact@v1
      with:
        name: Test results
        path: atest/output
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: dist/
    - uses: actions/upload-artifact@v1
      with:
        name: demoapp
        path: dynamic-test-app/dist
  test-install:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        node-version: [12.x]
    steps:      
      - uses: actions/checkout@v2
      - name: Download package for install testing
        uses: actions/download-artifact@v1
        with: 
          name: artifacts 
      - name: Download package for install testing
        uses: actions/download-artifact@v1
        with: 
          name: demoapp
          path: dynamic-test-app/dist
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Robot Framework Browser
        env:
          VERSION: 0.5.0
        run: |
          pip install "artifacts/robotframework_browser-$VERSION-py3-none-any.whl"
          pip install -U robotframework-pabot
          rfbrowser init
      - name: Run Robot Framework tests
        run: |
          make atest-global-pythonpath
        env:
          NODE_PATH: /usr/lib/node_modules
      - uses: actions/upload-artifact@v1
        if: success() || failure()
        with:
          name: Install results
          path: atest/output

