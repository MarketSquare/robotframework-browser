# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '15 10 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install nodejs dependencies
      run: |
        yarn --frozen-lockfile install
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install ffmpeg on unix-like
      run: |
        sudo apt-get install ffmpeg
      if: matrix.os != 'windows-latest'
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Browser/requirements.txt
        pip install -r Browser/dev-requirements.txt
    - name: Check types with mypy
      run: |
        mypy --config-file Browser/mypy.ini Browser
    - name: Check with flake8
      run: |
        flake8 --config Browser/.flake8 Browser
    - name: Build Protos and check with tsc
      run: |
        inv build
    - name: Start xvfb
      run: |
        export DISPLAY=:99.0
        Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &
    - name: Run pytests
      run: |
       inv utest
    - name: Run Robot Framework tests
      run: |
        xvfb-run --auto-servernum inv atest
    - name: Create Distributable Package
      run: |
        inv package
    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: Test results
        path: atest/output
    - uses: actions/upload-artifact@v2
      with:
        name: rfbrowser-wheel 
        path: dist/robotframework_browser-*-py3-none-any.whl
    - uses: actions/upload-artifact@v2
      with:
        name: demoapp
        path: node/dynamic-test-app
  test-install:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8]
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Download package for install testing
        uses: actions/download-artifact@v2
        with:
          name: rfbrowser-wheel
      - name: Download package for install testing
        uses: actions/download-artifact@v2
        with:
          name: demoapp
          path: node/dynamic-test-app
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install ffmpeg on unix-like
        run: |
          sudo apt-get install ffmpeg
        if: matrix.os != 'windows-latest'
      - name: Install Robot Framework Browser on unix-like
        run: |
          pip install ./robotframework_browser-*-py3-none-any.whl
        if: matrix.os != 'windows-latest'
      - name: Install Robot Framework Browser on windows
        run: |
          pip install (gci *.whl)
        if: matrix.os == 'windows-latest'
      - name: Install node deps and pyhton deps for test running
        run: |
          rfbrowser init
          pip install -r Browser/dev-requirements.txt
      - name: Set node_path env var
        run: |
          echo "::set-env name=NODE_PATH::/usr/lib/node_modules"
      - name: Test on unix-like os
        if: matrix.os != 'windows-latest'
        run: |
          echo ${{ matrix.os }}
          export DISPLAY=:99.0
          Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &
          xvfb-run --auto-servernum inv atest-global-pythonpath
      - name: Run Robot Framework tests on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          inv atest-global-pythonpath
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{ matrix.os }} Clean install results
          path: atest/output
